# 이 파일은 Cloud Build가 수행할 작업의 순서와 설정을 정의합니다.
# 각 단계(step)는 순차적으로 실행됩니다.

steps:
# --- 1단계: Docker 이미지 빌드 ---
# 'gcr.io/cloud-builders/docker'는 GCP에서 제공하는 공식 Docker 빌드 도구입니다.
- name: 'gcr.io/cloud-builders/docker'
  args:
    - 'build'
    - '-t'
    - 'asia-northeast3-docker.pkg.dev/$PROJECT_ID/comp-star-repo/backend:$COMMIT_SHA'
    - '.'
  id: 'Build Docker Image'


# --- 2단계: Docker 이미지 푸시 ---
- name: 'gcr.io/cloud-builders/docker'
  args: ['push', 'asia-northeast3-docker.pkg.dev/$PROJECT_ID/comp-star-repo/backend:$COMMIT_SHA']
  id: 'Push Docker Image'

# --- 3단계: 데이터베이스 마이그레이션 실행 ---
- name: 'gcr.io/google-appengine/exec-wrapper'
  args:
    - '-i'
    - 'asia-northeast3-docker.pkg.dev/$PROJECT_ID/comp-star-repo/backend:$COMMIT_SHA'
    - '-s'
    - '${_INSTANCE_CONNECTION_NAME}'
    - '--'
    - 'python'
    - 'manage.py'
    - 'migrate'
  id: 'Run Database Migrations'

# --- 4단계: Cloud Run에 새 버전 배포 ---
- name: 'gcr.io/google-cloud-sdk/gcloud'
  args:
    - 'run'
    - 'deploy'
    # 배포할 Cloud Run 서비스의 이름을 지정합니다.
    - 'star-compare-service'
    # 배포할 이미지의 전체 경로를 지정합니다.
    - '--image=us-central1-docker.pkg.dev/$PROJECT_ID/star-compare-repo/backend:$COMMIT_SHA'
    # 서비스가 실행될 리전을 지정합니다.
    - '--region=us-central1'
    # 플랫폼은 'managed'로 설정합니다.
    - '--platform=managed'
    # Cloud SQL 인스턴스와의 안전한 연결을 설정합니다.
    - '--add-cloudsql-instances=${_INSTANCE_CONNECTION_NAME}'
    # Secret Manager에 저장된 보안 비밀들을 환경 변수로 주입합니다.
    # 형식: '--set-secrets=[환경변수명]=[보안비밀명]:[버전]'
    - '--set-secrets=SECRET_KEY=SECRET_KEY:latest,DB_NAME=DB_NAME:latest,DB_USER=DB_USER:latest,DB_PASSWORD=DB_PASSWORD:latest'
  id: 'Deploy to Cloud Run'

# 빌드가 완료된 후 Artifact Registry에 저장될 이미지 목록입니다.
# (이 부분은 명시적으로 push 단계를 추가했으므로 필수는 아니지만, 명확성을 위해 유지하는 것이 좋습니다.)
images:
- 'asia-northeast3-docker.pkg.dev/$PROJECT_ID/comp-star-repo/backend:$COMMIT_SHA'

# 로깅 옵션: 빌드 로그를 별도의 버킷이 아닌 Cloud Logging에만 저장합니다.
options:
  logging: CLOUD_LOGGING_ONLY

